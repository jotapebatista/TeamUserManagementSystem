@model TeamUserManagementSystem.Models.User

@{
    ViewData["Title"] = "Edit User";
}

<div class="container">
    <h1 class="mt-4">Edit User</h1>

    <form asp-action="Edit" method="post">
        <input type="hidden" asp-for="UserId" />

        <div class="form-group">
            <label asp-for="UserName" class="control-label">User Name</label>
            <input asp-for="UserName" class="form-control" />
            <span asp-validation-for="UserName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="UserEmail" class="control-label">Email</label>
            <input asp-for="UserEmail" class="form-control" />
            <span asp-validation-for="UserEmail" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label>Select Teams:</label>
            @foreach (var team in (IEnumerable<Team>)ViewBag.TeamList)
            {
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" name="selectedTeams" value="@team.TeamId" @(IsTeamSelected(team.TeamId, Model) ? "checked" : "") />
                    <label class="form-check-label">@team.TeamName</label>
                </div>
            }
        </div>

        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary" />
            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
        </div>
    </form>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

@functions {
    public static bool IsTeamSelected(int teamId, User user)
    {

        Console.WriteLine(user.UserName);
        Console.WriteLine(user.UserTeams != null && user.UserTeams.Any(ut => ut.TeamId == teamId));
        Console.WriteLine(user.UserTeams);
        return user.UserTeams != null && user.UserTeams.Any(ut => ut.TeamId == teamId);
    }
}





